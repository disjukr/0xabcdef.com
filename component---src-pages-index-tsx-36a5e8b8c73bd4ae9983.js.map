{"version":3,"sources":["webpack:///./src/components/MarbleBackground.tsx","webpack:///./src/pages/index.tsx","webpack:///./src/pages/index.module.scss"],"names":["MarbleBackground","_ref","className","canvas","useRef","_useSubscribe","useSubscribe","layoutContext","layoutState","emitter","width","height","useAnimationFrameLoop","useEffect","PIXI","require","Circle","_PIXI$Graphics","x","y","dx","dy","size","color","_this","call","this","blendMode","BLEND_MODES","ADD","beginFill","drawCircle","endFill","inheritsLoose_default","prototype","move","container","stageWidth","stageHeight","removeChild","gen","pow","Math","max","spd","angle","random","PI","cos","sin","Graphics","ColorTransformFilter","_PIXI$filters$ColorMa","redMultiplier","greenMultiplier","blueMultiplier","alphaMultiplier","redOffset","greenOffset","blueOffset","alphaOffset","_this2","matrix","filters","ColorMatrixFilter","Container","circles","cameraMatrix","Matrix","translate","rt1","RenderTexture","create","offset","rt2","rts1","Sprite","rts2","df","DisplacementFilter","cf","addChild","a","renderer","autoDetectRenderer","view","current","on","resize","s","_iterator","children","_isArray","Array","isArray","_i","Symbol","iterator","_ref2","length","next","done","value","scale","render","removeAllListeners","arr0","react_default","createElement","ref","__webpack_exports__","styles","classNames","href","module","exports","page","layer","background"],"mappings":"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","file":"component---src-pages-index-tsx-36a5e8b8c73bd4ae9983.js","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { ContextValue } from 'join-react-context';\n\nimport { arr0, useSubscribe, useAnimationFrameLoop } from '../util';\nimport { layoutContext } from './Layout';\n\ninterface Props {\n    className?: string;\n}\nexport default ({ className }: Props) => {\n    const canvas = useRef(null as any);\n    const [layoutState, emitter] = useSubscribe(layoutContext);\n    const width = layoutState.width / 2;\n    const height = layoutState.height / 2;\n    useAnimationFrameLoop(emitter);\n    useEffect(() => {\n        // babel에서 typeof import 지원이 안되는 듯 하다...\n        // 개발활때만 주석 풀고 작업해야함 ㅠㅠㅠ\n        // const PIXI: typeof import('pixi.js') = require('pixi.js');\n        const PIXI = require('pixi.js');\n        class Circle extends PIXI.Graphics {\n            constructor(\n                public x: number,\n                public y: number,\n                public dx: number,\n                public dy: number,\n                public size: number,\n                public color: number\n            ) {\n                super();\n                this.blendMode = PIXI.BLEND_MODES.ADD;\n                if (size > 0) {\n                    this.beginFill(color);\n                    this.drawCircle(0, 0, size);\n                    this.endFill();\n                }\n            }\n            move(container: PIXI.Container, stageWidth: number, stageHeight: number) {\n                this.x += this.dx;\n                this.y += this.dy;\n                if (\n                    this.x < -this.size ||\n                    this.x > stageWidth + this.size ||\n                    this.y < -this.size ||\n                    this.y > stageHeight + this.size\n                ) {\n                    container.removeChild(this);\n                }\n            }\n            static gen(stageWidth: number, stageHeight: number, pow: number) {\n                const size = pow * (Math.max(stageWidth, stageHeight) / 5);\n                const spd = size * 0.1 + 5;\n                const angle = Math.random() * Math.PI * 2;\n                return new Circle(\n                    stageWidth / 2,\n                    stageHeight / 2,\n                    Math.cos(angle) * spd,\n                    Math.sin(angle) * spd,\n                    size,\n                    (Math.random() * 0xffffff) & 0x333333\n                );\n            }\n        }\n        class ColorTransformFilter extends PIXI.filters.ColorMatrixFilter {\n            constructor(\n                redMultiplier = 1,\n                greenMultiplier = 1,\n                blueMultiplier = 1,\n                alphaMultiplier = 1,\n                redOffset = 0,\n                greenOffset = 0,\n                blueOffset = 0,\n                alphaOffset = 0\n            ) {\n                super();\n                this.matrix = [\n                    redMultiplier,\n                    0,\n                    0,\n                    0,\n                    redOffset / 255,\n                    0,\n                    greenMultiplier,\n                    0,\n                    0,\n                    greenOffset / 255,\n                    0,\n                    0,\n                    blueMultiplier,\n                    0,\n                    blueOffset / 255,\n                    0,\n                    0,\n                    0,\n                    alphaMultiplier,\n                    alphaOffset / 255,\n                ];\n            }\n        }\n        let width = layoutState.width / 2;\n        let height = layoutState.height / 2;\n        const container = new PIXI.Container();\n        const circles = new PIXI.Container();\n        const offset = 50;\n        const cameraMatrix = new PIXI.Matrix();\n        cameraMatrix.translate(offset, offset);\n        const rt1 = PIXI.RenderTexture.create(width + offset * 2, height + offset * 2);\n        const rt2 = PIXI.RenderTexture.create(width + offset * 2, height + offset * 2);\n        const rts1 = new PIXI.Sprite(rt1);\n        rts1.x = -offset;\n        rts1.y = -offset;\n        const rts2 = new PIXI.Sprite(rt2);\n        rts2.x = -offset;\n        rts2.y = -offset;\n        const df = new PIXI.filters.DisplacementFilter(rts2);\n        const f = 0.9;\n        const cf = new ColorTransformFilter(f, f, f);\n        rts1.filters = [df, cf];\n        container.addChild(circles, rts1);\n        let a = 0;\n        const renderer = PIXI.autoDetectRenderer(width, height, {\n            view: canvas.current,\n        });\n        emitter.on('update', (layoutState: ContextValue<typeof layoutContext>) => {\n            width = layoutState.width / 2;\n            height = layoutState.height / 2;\n            rt1.resize(width + offset * 2, height + offset * 2);\n            rt2.resize(width + offset * 2, height + offset * 2);\n            renderer.resize(width, height);\n        });\n        emitter.on('animation-frame', () => {\n            const pow = Math.random();\n            const s = Math.max(width, height) / 4;\n            a += (Math.random() * 4 - 2) * pow;\n            circles.addChild(Circle.gen(width, height, pow));\n            circles.addChild(Circle.gen(width, height, pow));\n            for (const circle of circles.children) {\n                (circle as Circle).move(circles, width, height);\n            }\n            df.scale.x = Math.cos(a) * pow * s;\n            df.scale.y = Math.sin(a) * pow * s;\n            renderer.render(rts1, rt1, false, cameraMatrix);\n            renderer.render(circles, rt1, false);\n            renderer.render(container, rt2, false, cameraMatrix);\n            renderer.render(container);\n        });\n        return () => emitter.removeAllListeners();\n    }, arr0);\n    return <canvas className={className} ref={canvas} width={width} height={height} />;\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport MarbleBackground from '../components/MarbleBackground';\nimport * as styles from './index.module.scss';\n\nexport default () => {\n    return (\n        <div className={styles.page}>\n            <MarbleBackground className={classNames(styles.background, styles.layer)} />\n            <div className={styles.layer}>\n                <h1>JongChan Choi</h1>\n                <ul>\n                    <li>\n                        <a href=\"https://0xabcdef.com/resume/\">resume</a>\n                    </li>\n                    <li>\n                        <a href=\"https://github.com/disjukr\">github</a>\n                    </li>\n                    <li>\n                        <a href=\"https://twitter.com/disjukr\">twitter</a>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"index-module--page--2nb-E\",\"layer\":\"index-module--layer--12eg-\",\"background\":\"index-module--background--1Lh-R\"};"],"sourceRoot":""}